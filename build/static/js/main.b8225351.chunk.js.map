{"version":3,"sources":["firebase.js","Hooks/useFireStore.js","comps/ImageGrid.js","comps/Modal.js","comps/Title.js","Hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","projectFireStore","timestamp","FieldValue","serverTimestamp","useFireStore","collection","useState","docs","setDocs","useEffect","unsub","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","console","log","className","map","motion","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","Modal","selectedimg","e","target","classList","contains","y","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8225351.chunk.js","sourcesContent":[" import * as firebase  from 'firebase/firebase'\n import 'firebase/storage'\n import 'firebase/firestore'\n \n // Your web app's Firebase configuration\n const firebaseConfig = {\n  apiKey: \"AIzaSyC1_XfKtkTuXMkq059x4gPvwnAiOyR_1Ns\",\n  authDomain: \"image-gallery-b625f.firebaseapp.com\",\n  projectId: \"image-gallery-b625f\",\n  storageBucket: \"image-gallery-b625f.appspot.com\",\n  messagingSenderId: \"861133406802\",\n  appId: \"1:861133406802:web:e4e0ebd895512bf9fe158b\",\n  measurementId: \"G-4ZH6BQL6DH\"\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage=firebase.storage();\n  const projectFireStore=firebase.firestore();\n  const timestamp=firebase.firestore.FieldValue.serverTimestamp;\n\n  export   {projectStorage,projectFireStore,timestamp}","import {useState,useEffect} from 'react'\nimport {projectFireStore} from '../firebase.js'\n\n\nconst useFireStore = (collection) => {\n    const [docs,setDocs]=useState();\n     useEffect(()=>{\n       const unsub = projectFireStore.collection(collection).onSnapshot((snap)=>{\n            let documents=[];\n            snap.forEach(doc=>{\n            documents.push({...doc.data(), id:doc.id})\n            });\n            setDocs(documents);\n         });\n         return ()=>unsub();\n     },[collection])\n\n    return{ docs }\n}\nexport default useFireStore;\n\n","import React from 'react'\nimport useFireStore from '../Hooks/useFireStore'\nimport {motion} from 'framer-motion';\n\nconst ImageGrid=({setSelectedImg})=>{\n  const {docs} =useFireStore('images');\n  console.log(docs);\n  return(\n    <div className=\"img-grid\">\n        { docs && docs.map(doc=>(\n            <motion.div className=\"imag-wrap\" \n            key={doc.id}\n            layout\n            whileHover={{opacity:1}}\n            onClick={()=>\n            setSelectedImg(doc.url)}\n            >\n\n            <motion.img src={doc.url} \n            alt=\"uploaded file\"\n            initial={{opacity:0}}\n            animate={{opacity:1}}\n            />\n            </motion.div> \n        ))}\n        </div>\n  )\n}\n\nexport default ImageGrid;","import React from 'react'\nimport {motion} from 'framer-motion'\n\nconst Modal = ({selectedimg,setSelectedImg}) => {\n\n  const handleClick=(e)=>{\n      if(e.target.classList.contains('backdrop'))\n     setSelectedImg(null);\n  }\n    return (\n        <motion.div className=\"backdrop\" \n        onClick={handleClick}\n        initial={{opacity:0}}\n        animate={{opacity:1}}>\n\n            <motion.img src={selectedimg} \n            alt=\"anlarged pic\" \n            initial={{y:\"-100vh\"}}\n            animate={{y:0}}/>\n        </motion.div>\n    )\n}\n\nexport default Modal\n","import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Image Gallery</h1>\n      <h2>Your Pictures</h2>\n      <p>Store the memories.</p>\n    </div>\n  )\n}\n\nexport default Title;","import {useState,useEffect} from 'react';\nimport {projectStorage,projectFireStore,timestamp} from '../firebase.js';\n\nconst useStorage=(file)=>{\n    const[progress,setProgress]=useState(0);\n    const[error,setError]=useState(null);\n    const[url,setUrl]=useState(null);\n    \n    useEffect(()=>{\n        //references\n        const storageRef=projectStorage.ref(file.name);\n        const collectionRef=projectFireStore.collection('images');\n\n        storageRef.put(file).on('state_changed',(snap)=>{\n           let percentage=(snap.bytesTransferred/snap.totalBytes)*100\n            setProgress(percentage);\n        },(err)=>{\n            setError(err);\n        },async ()=>{\n           const url=await storageRef.getDownloadURL();\n           const createdAt =  timestamp();\n           collectionRef.add({url,createdAt});\n           setUrl(url);\n        })\n    },[file]);\n\n    return {progress, url, error }\n\n}\n\nexport default useStorage;","import React,{useEffect} from 'react';\nimport useStorage from '../Hooks/useStorage'\nimport {motion} from 'framer-motion'\n\nconst ProgressBar=({file,setFile})=>{\n    const {url,progress}=useStorage(file);\n     \n    useEffect(()=>{\n        if(url) {\n            setFile(null);\n        }\n    },[url,setFile])\n    return(\n       <motion.div className=\"progress-bar\" \n       initial={{width:0}}\n       animate={{width: progress + '%'}}\n       >\n       </motion.div>\n    )\n}\n\nexport default ProgressBar;","import React,{useState} from 'react'\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm=()=>{\n      const[file,setFile]=useState(null);\n      const [error,setError]=useState(null);\n\n      const types=['impage/png','image/jpeg'];\n\n     const changedHandeler=(e)=>{\n          let selected=e.target.files[0];\n          if(selected && types.includes(selected.type)){\n              setFile(selected);\n              setError('');\n          }else{\n              setFile(null);\n              setError('please select an image file (png or jpeg)');\n          }\n     }\n    return(\n\n         <form>\n        <label>\n         <input type=\"file\"  onChange={changedHandeler} />\n          <span>+</span>\n          </label>\n          <div className=\"output\">\n              {\n                  error && <div className=\"error\"> {error} </div>      \n               } \n              \n                {  file && <div className=\"file\">{file.name}</div> }\n\n                {  file && <ProgressBar  file={file}  setFile={setFile}/>}\n              \n          </div>\n         </form>\n\n    )\n}\n\nexport default UploadForm;","import React,{useState} from 'react';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\n\nfunction App() {\n  const [selectedimg,setSelectedImg]=useState(null);\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid setSelectedImg={setSelectedImg} />\n\n     {\n       selectedimg &&\n        <Modal selectedimg={selectedimg}\n         setSelectedImg={setSelectedImg} />\n     }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}