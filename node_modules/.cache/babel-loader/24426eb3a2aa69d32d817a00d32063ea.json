{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { projectStorage, projectFireStore, timestamp } from '../firebase.js';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    //references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFireStore.collection('images');\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      collectionRef.add({\n        url,\n        createdAt\n      });\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/shashwatyadav/Desktop/photo-gallery-react-master/src/Hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFireStore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,cAAR,EAAuBC,gBAAvB,EAAwCC,SAAxC,QAAwD,gBAAxD;;AAEA,MAAMC,UAAU,GAAEC,IAAD,IAAQ;AACrB,QAAK,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,CAAD,CAApC;AACA,QAAK,CAACS,KAAD,EAAOC,QAAP,IAAiBV,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAK,CAACW,GAAD,EAAKC,MAAL,IAAaZ,QAAQ,CAAC,IAAD,CAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,UAAMY,UAAU,GAACX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAjB;AACA,UAAMC,aAAa,GAACb,gBAAgB,CAACc,UAAjB,CAA4B,QAA5B,CAApB;AAEAJ,IAAAA,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,eAAxB,EAAyCC,IAAD,IAAQ;AAC7C,UAAIC,UAAU,GAAED,IAAI,CAACE,gBAAL,GAAsBF,IAAI,CAACG,UAA5B,GAAwC,GAAvD;AACCf,MAAAA,WAAW,CAACa,UAAD,CAAX;AACH,KAHD,EAGGG,GAAD,IAAO;AACLd,MAAAA,QAAQ,CAACc,GAAD,CAAR;AACH,KALD,EAKE,YAAU;AACT,YAAMb,GAAG,GAAC,MAAME,UAAU,CAACY,cAAX,EAAhB;AACA,YAAMC,SAAS,GAAItB,SAAS,EAA5B;AACAY,MAAAA,aAAa,CAACW,GAAd,CAAkB;AAAChB,QAAAA,GAAD;AAAKe,QAAAA;AAAL,OAAlB;AACAd,MAAAA,MAAM,CAACD,GAAD,CAAN;AACF,KAVD;AAWH,GAhBQ,EAgBP,CAACL,IAAD,CAhBO,CAAT;AAkBA,SAAO;AAACC,IAAAA,QAAD;AAAWI,IAAAA,GAAX;AAAgBF,IAAAA;AAAhB,GAAP;AAEH,CAzBD;;AA2BA,eAAeJ,UAAf","sourcesContent":["import {useState,useEffect} from 'react';\nimport {projectStorage,projectFireStore,timestamp} from '../firebase.js';\n\nconst useStorage=(file)=>{\n    const[progress,setProgress]=useState(0);\n    const[error,setError]=useState(null);\n    const[url,setUrl]=useState(null);\n    \n    useEffect(()=>{\n        //references\n        const storageRef=projectStorage.ref(file.name);\n        const collectionRef=projectFireStore.collection('images');\n\n        storageRef.put(file).on('state_changed',(snap)=>{\n           let percentage=(snap.bytesTransferred/snap.totalBytes)*100\n            setProgress(percentage);\n        },(err)=>{\n            setError(err);\n        },async ()=>{\n           const url=await storageRef.getDownloadURL();\n           const createdAt =  timestamp();\n           collectionRef.add({url,createdAt});\n           setUrl(url);\n        })\n    },[file]);\n\n    return {progress, url, error }\n\n}\n\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}