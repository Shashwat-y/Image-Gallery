{"ast":null,"code":"var _jsxFileName = \"/Users/shashwatyadav/Desktop/photo-gallery-react-master/src/comps/ImageGrid.js\";\nimport React from 'react';\nimport useFirestore from '../Hooks/';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({\n  setSelectedImg\n}) => {\n  const {\n    docs\n  } = useFirestore('images');\n  console.log(docs); // Create a Set to store unique image URLs\n\n  const uniqueImageUrls = new Set(); // Filter out duplicate images\n\n  const filteredDocs = docs ? docs.filter(doc => {\n    if (!uniqueImageUrls.has(doc.url)) {\n      uniqueImageUrls.add(doc.url);\n      return true; // Include the image in the grid\n    }\n\n    return false; // Skip duplicate image\n  }) : [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, filteredDocs && filteredDocs.map(doc => /*#__PURE__*/React.createElement(motion.div, {\n    className: \"imag-wrap\",\n    key: doc.id,\n    layout: true,\n    whileHover: {\n      opacity: 1\n    },\n    onClick: () => setSelectedImg(doc.url),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(motion.img, {\n    src: doc.url,\n    alt: \"uploaded file\",\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default ImageGrid;","map":{"version":3,"sources":["/Users/shashwatyadav/Desktop/photo-gallery-react-master/src/comps/ImageGrid.js"],"names":["React","useFirestore","motion","ImageGrid","setSelectedImg","docs","console","log","uniqueImageUrls","Set","filteredDocs","filter","doc","has","url","add","map","id","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,YAAY,CAAC,QAAD,CAA7B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAFwC,CAIxC;;AACA,QAAMG,eAAe,GAAG,IAAIC,GAAJ,EAAxB,CALwC,CAOxC;;AACA,QAAMC,YAAY,GAAGL,IAAI,GACrBA,IAAI,CAACM,MAAL,CAAaC,GAAD,IAAS;AACnB,QAAI,CAACJ,eAAe,CAACK,GAAhB,CAAoBD,GAAG,CAACE,GAAxB,CAAL,EAAmC;AACjCN,MAAAA,eAAe,CAACO,GAAhB,CAAoBH,GAAG,CAACE,GAAxB;AACA,aAAO,IAAP,CAFiC,CAEpB;AACd;;AACD,WAAO,KAAP,CALmB,CAKL;AACf,GAND,CADqB,GAQrB,EARJ;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,YAAY,IACXA,YAAY,CAACM,GAAb,CAAkBJ,GAAD,iBACf,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAEA,GAAG,CAACK,EAFX;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,UAAU,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAJd;AAKE,IAAA,OAAO,EAAE,MAAMd,cAAc,CAACQ,GAAG,CAACE,GAAL,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEF,GAAG,CAACE,GADX;AAEE,IAAA,GAAG,EAAC,eAFN;AAGE,IAAA,OAAO,EAAE;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAHX;AAIE,IAAA,OAAO,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAFJ,CADF;AAqBD,CAvCD;;AAyCA,eAAef,SAAf","sourcesContent":["import React from 'react';\nimport useFirestore from '../Hooks/';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n  console.log(docs);\n\n  // Create a Set to store unique image URLs\n  const uniqueImageUrls = new Set();\n\n  // Filter out duplicate images\n  const filteredDocs = docs\n    ? docs.filter((doc) => {\n        if (!uniqueImageUrls.has(doc.url)) {\n          uniqueImageUrls.add(doc.url);\n          return true; // Include the image in the grid\n        }\n        return false; // Skip duplicate image\n      })\n    : [];\n\n  return (\n    <div className=\"img-grid\">\n      {filteredDocs &&\n        filteredDocs.map((doc) => (\n          <motion.div\n            className=\"imag-wrap\"\n            key={doc.id}\n            layout\n            whileHover={{ opacity: 1 }}\n            onClick={() => setSelectedImg(doc.url)}\n          >\n            <motion.img\n              src={doc.url}\n              alt=\"uploaded file\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n            />\n          </motion.div>\n        ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n"]},"metadata":{},"sourceType":"module"}